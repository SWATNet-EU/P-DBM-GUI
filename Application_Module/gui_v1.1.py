# Form implementation generated from reading ui file 'DBM_GUI.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets

from actions_1D import Actions1D
from actions_2D import Actions2D


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        # Setup the main window properties.
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1347, 900)
        MainWindow.setToolTip("")
        MainWindow.setToolTipDuration(0)

        # Initialize the central widget.
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        # self.mainLayout = QtWidgets.QVBoxLayout(self.centralwidget)

        # Create a tab widget to organize the application into multiple tabs.
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(5, 5, 1331, 870))
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.TabPosition.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.tabWidget.setObjectName("tabWidget")

        # 1D DBM Tab Setup
        # self.DBM_1D_layout = QtWidgets.QVBoxLayout(self.DBM_1D)
        self.DBM_1D = QtWidgets.QWidget()
        self.DBM_1D.setObjectName("DBM_1D")

        # PDBM enable/disable Selection
        self.PDBM_1D_Selection = QtWidgets.QLabel(parent=self.DBM_1D)
        self.PDBM_1D_Selection.setGeometry(QtCore.QRect(5, 25, 151, 31))
        self.PDBM_1D_Selection.setObjectName("PDBM_1D_Selection")

        # Add radio buttons for enabling or disabling P-DBM calculation.
        self.PDBM_Yes = QtWidgets.QRadioButton(parent=self.DBM_1D)
        self.PDBM_Yes.setGeometry(QtCore.QRect(160, 26, 151, 31))
        self.PDBM_Yes.setCheckable(True)
        self.PDBM_Yes.setChecked(True)
        self.PDBM_Yes.setObjectName("PDBM_Yes")

        self.PDBM_No = QtWidgets.QRadioButton(parent=self.DBM_1D)
        self.PDBM_No.setGeometry(QtCore.QRect(220, 26, 151, 31))
        self.PDBM_No.setChecked(False)
        self.PDBM_No.setObjectName("PDBM_No")

        # Group the PDBM options together to ensure mutual exclusivity.
        self.PDBM_group = QtWidgets.QButtonGroup(MainWindow)
        self.PDBM_group.setObjectName("PDBM_group")
        self.PDBM_group.addButton(self.PDBM_Yes)
        self.PDBM_group.addButton(self.PDBM_No)

        # Dividers for seperations
        self.line_2 = QtWidgets.QFrame(parent=self.DBM_1D)
        self.line_2.setGeometry(QtCore.QRect(0, 60, 361, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_4 = QtWidgets.QFrame(parent=self.DBM_1D)
        self.line_4.setGeometry(QtCore.QRect(250, 160, 20, 141))
        self.line_4.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_4.setObjectName("line_4")
        self.line_5 = QtWidgets.QFrame(parent=self.DBM_1D)
        self.line_5.setGeometry(QtCore.QRect(630, 120, 20, 81))
        self.line_5.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_5.setObjectName("line_5")
        self.line_8 = QtWidgets.QFrame(parent=self.DBM_1D)
        self.line_8.setGeometry(QtCore.QRect(360, 0, 20, 341))
        self.line_8.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_8.setObjectName("line_8")
        self.line_12 = QtWidgets.QFrame(parent=self.DBM_1D)
        self.line_12.setGeometry(QtCore.QRect(10, 350, 1311, 16))
        self.line_12.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_12.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_12.setObjectName("line_12")
        self.line_13 = QtWidgets.QFrame(parent=self.DBM_1D)
        self.line_13.setGeometry(QtCore.QRect(730, 0, 20, 341))
        self.line_13.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_13.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_13.setObjectName("line_13")

        # CME Input Parameters Section
        self.CME_input_1D_heading = QtWidgets.QLabel(parent=self.DBM_1D)
        self.CME_input_1D_heading.setGeometry(QtCore.QRect(0, 76, 361, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.CME_input_1D_heading.setFont(font)
        self.CME_input_1D_heading.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.CME_input_1D_heading.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.CME_input_1D_heading.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignHCenter | QtCore.Qt.AlignmentFlag.AlignTop)
        self.CME_input_1D_heading.setObjectName("CME_input_1D_heading")

        # Date and Time input of CME at R0
        # Date label
        self.Date_1D_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.Date_1D_label.setGeometry(QtCore.QRect(10, 120, 150, 28))
        self.Date_1D_label.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.Date_1D_label.setObjectName("Date_1D_label")
        # Date selection
        self.CME_date = QtWidgets.QDateEdit(parent=self.DBM_1D)
        self.CME_date.setGeometry(QtCore.QRect(150, 120, 115, 28))
        self.CME_date.setDateTime(QtCore.QDateTime(
            QtCore.QDate(2000, 1, 2), QtCore.QTime(0, 0, 0)))
        self.CME_date.setObjectName("CME_date")

        # t0 label
        self.t0_1D_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.t0_1D_label.setGeometry(QtCore.QRect(10, 160, 125, 28))
        self.t0_1D_label.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.t0_1D_label.setObjectName("t0_1D_label")
        # t0 selection
        self.CME_time = QtWidgets.QTimeEdit(parent=self.DBM_1D)
        self.CME_time.setGeometry(QtCore.QRect(150, 160, 100, 28))
        self.CME_time.setDateTime(QtCore.QDateTime(
            QtCore.QDate(2000, 1, 2), QtCore.QTime(0, 0, 0)))
        self.CME_time.setObjectName("CME_time")
        # dt0 selection
        self.CME_dt0 = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.CME_dt0.setEnabled(True)
        self.CME_dt0.setGeometry(QtCore.QRect(270, 160, 90, 28))
        self.CME_dt0.setToolTipDuration(-2)
        self.CME_dt0.setStatusTip("")
        self.CME_dt0.setMinimum(0.0)
        self.CME_dt0.setMaximum(1500.0)
        self.CME_dt0.setSingleStep(0.1)
        self.CME_dt0.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.CME_dt0.setProperty("value", 60.0)
        self.CME_dt0.setObjectName("CME_dt0")

        # R0 label
        self.R0_1D_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.R0_1D_label.setGeometry(QtCore.QRect(10, 205, 161, 41))
        self.R0_1D_label.setObjectName("R0_1D_label")
        # R0 input
        self.R0 = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.R0.setGeometry(QtCore.QRect(150, 210, 100, 28))
        self.R0.setMinimum(20.0)
        self.R0.setSingleStep(0.01)
        self.R0.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.R0.setObjectName("R0")
        # dR0 input
        self.dR0 = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.dR0.setEnabled(True)
        self.dR0.setGeometry(QtCore.QRect(270, 210, 90, 28))
        self.dR0.setMinimum(0.1)
        self.dR0.setSingleStep(0.01)
        self.dR0.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dR0.setProperty("value", 1.0)
        self.dR0.setObjectName("dR0")

        # V0 label
        self.V0_1D_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.V0_1D_label.setGeometry(QtCore.QRect(10, 260, 150, 41))
        self.V0_1D_label.setObjectName("V0_1D_label")
        # V0 input
        self.V0 = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.V0.setGeometry(QtCore.QRect(150, 260, 100, 28))
        self.V0.setMaximum(200000.0)
        self.V0.setSingleStep(1.0)
        self.V0.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.V0.setProperty("value", 1000.0)
        self.V0.setObjectName("V0")
        # dV0 input
        self.dV0 = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.dV0.setEnabled(True)
        self.dV0.setGeometry(QtCore.QRect(270, 260, 91, 28))
        self.dV0.setMaximum(200000.0)
        self.dV0.setSingleStep(1.0)
        self.dV0.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dV0.setProperty("value", 100.0)
        self.dV0.setObjectName("dV0")

        # Target Information
        self.Target_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.Target_label.setGeometry(QtCore.QRect(10, 310, 76, 28))
        self.Target_label.setObjectName("Target_label")
        # Target List
        self.Target = QtWidgets.QComboBox(parent=self.DBM_1D)
        self.Target.setGeometry(QtCore.QRect(150, 310, 90, 28))
        self.Target.setObjectName("Target")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")
        self.Target.addItem("")

        # DBM Input header
        self.DBM_1D_input_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.DBM_1D_input_label.setGeometry(QtCore.QRect(385, 10, 351, 21))
        self.DBM_1D_input_label.setObjectName("DBM_1D_input_label")

        # Auto DBM choice
        # label
        self.Auto_DBM_1D_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.Auto_DBM_1D_label.setGeometry(QtCore.QRect(380, 40, 111, 31))
        self.Auto_DBM_1D_label.setObjectName("Auto_DBM_1D_label")
        self.Auto_DBM_Yes = QtWidgets.QRadioButton(parent=self.DBM_1D)
        self.Auto_DBM_Yes.setGeometry(QtCore.QRect(520, 45, 61, 26))
        self.Auto_DBM_Yes.setChecked(True)
        self.Auto_DBM_Yes.setObjectName("Auto_DBM_Yes")
        self.Auto_DBM_No = QtWidgets.QRadioButton(parent=self.DBM_1D)
        self.Auto_DBM_No.setGeometry(QtCore.QRect(600, 45, 71, 26))
        self.Auto_DBM_No.setObjectName("Auto_DBM_No")
        # Auto DBM button grouping
        self.Auto_DBM = QtWidgets.QButtonGroup(MainWindow)
        self.Auto_DBM.setObjectName("Auto_DBM")
        self.Auto_DBM.addButton(self.Auto_DBM_Yes)
        self.Auto_DBM.addButton(self.Auto_DBM_No)

        # Solar wind type label
        self.Solar_wind_type_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.Solar_wind_type_label.setGeometry(QtCore.QRect(380, 80, 141, 21))
        self.Solar_wind_type_label.setObjectName("Solar_wind_type_label")
        self.W_slow = QtWidgets.QRadioButton(parent=self.DBM_1D)
        self.W_slow.setGeometry(QtCore.QRect(520, 80, 123, 26))
        self.W_slow.setChecked(True)
        self.W_slow.setObjectName("W_slow")
        self.W_fast = QtWidgets.QRadioButton(parent=self.DBM_1D)
        self.W_fast.setGeometry(QtCore.QRect(600, 80, 123, 26))
        self.W_fast.setObjectName("W_fast")
        # Solar Wind Grouping
        self.Wind_type = QtWidgets.QButtonGroup(MainWindow)
        self.Wind_type.setObjectName("Wind_type")
        self.Wind_type.addButton(self.W_slow)
        self.Wind_type.addButton(self.W_fast)

        # manual solar wind speed label
        self.W_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.W_label.setGeometry(QtCore.QRect(380, 120, 161, 41))
        self.W_label.setObjectName("W_label")

        self.w_in = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.w_in.setGeometry(QtCore.QRect(540, 120, 90, 28))
        self.w_in.setMaximum(200000.0)
        self.w_in.setSingleStep(1.0)
        self.w_in.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.w_in.setProperty("value", 400.0)
        self.w_in.setObjectName("w_in")
        self.dW = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.dW.setGeometry(QtCore.QRect(650, 120, 80, 28))
        self.dW.setMaximum(1000.0)
        self.dW.setSingleStep(1.0)
        self.dW.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dW.setProperty("value", 50.0)
        self.dW.setObjectName("dW")

        # Manual gamma label
        self.gamma_label = QtWidgets.QLabel(parent=self.DBM_1D)
        self.gamma_label.setGeometry(QtCore.QRect(380, 170, 141, 51))
        self.gamma_label.setObjectName("gamma_label")
        self.Gamma = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.Gamma.setGeometry(QtCore.QRect(540, 180, 90, 28))
        self.Gamma.setMaximum(10.0)
        self.Gamma.setSingleStep(0.01)
        self.Gamma.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.Gamma.setProperty("value", 0.2)
        self.Gamma.setObjectName("Gamma")
        self.dGamma = QtWidgets.QDoubleSpinBox(parent=self.DBM_1D)
        self.dGamma.setGeometry(QtCore.QRect(650, 180, 80, 28))
        self.dGamma.setDecimals(3)
        self.dGamma.setMaximum(10.0)
        self.dGamma.setSingleStep(0.001)
        self.dGamma.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dGamma.setProperty("value", 0.001)
        self.dGamma.setObjectName("dGamma")

        # Calculate Button
        self.Calculate = QtWidgets.QPushButton(parent=self.DBM_1D)
        self.Calculate.setGeometry(QtCore.QRect(560, 300, 100, 28))
        self.Calculate.setDefault(True)
        self.Calculate.setFlat(False)
        self.Calculate.setObjectName("Calculate")

        # Reset Button
        self.Reset = QtWidgets.QPushButton(parent=self.DBM_1D)
        self.Reset.setGeometry(QtCore.QRect(440, 300, 100, 28))
        self.Reset.setObjectName("Reset")

        # Result of 1D DBM
        self.Result_1D_heading = QtWidgets.QLabel(parent=self.DBM_1D)
        self.Result_1D_heading.setGeometry(QtCore.QRect(990, 10, 151, 41))
        self.Result_1D_heading.setObjectName("Result_1D_heading")
        self.DBM_Result_1D = QtWidgets.QLabel(parent=self.DBM_1D)
        self.DBM_Result_1D.setGeometry(QtCore.QRect(760, 80, 551, 141))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.DBM_Result_1D.setFont(font)
        self.DBM_Result_1D.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.DBM_Result_1D.setWordWrap(True)
        self.DBM_Result_1D.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading |
                                        QtCore.Qt.AlignmentFlag.AlignLeft | QtCore.Qt.AlignmentFlag.AlignTop)
        self.DBM_Result_1D.setObjectName("DBM_Result_1D")

        # Heading for plots
        self.Plot_1D_heading = QtWidgets.QLabel(parent=self.DBM_1D)
        self.Plot_1D_heading.setGeometry(QtCore.QRect(20, 380, 151, 41))
        self.Plot_1D_heading.setObjectName("Plot_1D_heading")

        # RVT Plot
        self.RVT_plot = QtWidgets.QLabel(parent=self.DBM_1D)
        self.RVT_plot.setGeometry(QtCore.QRect(10, 440, 500, 381))
        self.RVT_plot.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.RVT_plot.setScaledContents(True)
        self.RVT_plot.setObjectName("RVT_plot")

        # Transit time plot
        self.TT_Plot = QtWidgets.QLabel(parent=self.DBM_1D)
        self.TT_Plot.setGeometry(QtCore.QRect(515, 440, 400, 381))
        self.TT_Plot.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.TT_Plot.setScaledContents(True)
        self.TT_Plot.setObjectName("TT_Plot")

        # Arrival Speed Plot
        self.V_plot = QtWidgets.QLabel(parent=self.DBM_1D)
        self.V_plot.setGeometry(QtCore.QRect(920, 440, 400, 381))
        self.V_plot.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.V_plot.setScaledContents(True)
        self.V_plot.setObjectName("V_plot")

        # 2D DBM Tab
        self.tabWidget.addTab(self.DBM_1D, "")
        self.DBM_2D = QtWidgets.QWidget()
        self.DBM_2D.setObjectName("DBM_2D")

        # PDBM choice
        self.PDBM_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.PDBM_2D_label.setGeometry(QtCore.QRect(5, 26, 151, 31))
        self.PDBM_2D_label.setObjectName("PDBM_2D_label")
        self.PDBM_Yes_2 = QtWidgets.QRadioButton(parent=self.DBM_2D)
        self.PDBM_Yes_2.setGeometry(QtCore.QRect(160, 27, 61, 31))
        self.PDBM_Yes_2.setCheckable(True)
        self.PDBM_Yes_2.setChecked(True)
        self.PDBM_Yes_2.setObjectName("PDBM_Yes_2")

        self.PDBM_No_2 = QtWidgets.QRadioButton(parent=self.DBM_2D)
        self.PDBM_No_2.setGeometry(QtCore.QRect(220, 27, 151, 31))
        self.PDBM_No_2.setChecked(False)
        self.PDBM_No_2.setObjectName("PDBM_No_2")
        self.PDBM_group_2 = QtWidgets.QButtonGroup(MainWindow)
        self.PDBM_group_2.setObjectName("PDBM_group_2")
        self.PDBM_group_2.addButton(self.PDBM_No_2)
        self.PDBM_group_2.addButton(self.PDBM_Yes_2)

        # CME Input
        self.CME_input_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.CME_input_2D_label.setGeometry(QtCore.QRect(0, 90, 361, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.CME_input_2D_label.setFont(font)
        self.CME_input_2D_label.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.CME_input_2D_label.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.CME_input_2D_label.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignHCenter | QtCore.Qt.AlignmentFlag.AlignTop)
        self.CME_input_2D_label.setObjectName("CME_input_2D_label")

        # Date Input
        self.Date_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Date_2D_label.setGeometry(QtCore.QRect(10, 138, 150, 28))
        self.Date_2D_label.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.Date_2D_label.setObjectName("Date_2D_label")
        self.CME_date_2 = QtWidgets.QDateEdit(parent=self.DBM_2D)
        self.CME_date_2.setGeometry(QtCore.QRect(150, 138, 115, 28))
        self.CME_date_2.setDateTime(QtCore.QDateTime(
            QtCore.QDate(2000, 1, 2), QtCore.QTime(0, 0, 0)))
        self.CME_date_2.setObjectName("CME_date_2")

        # T0 input
        self.t0_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.t0_2D_label.setGeometry(QtCore.QRect(10, 180, 125, 28))
        self.t0_2D_label.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.t0_2D_label.setObjectName("t0_2D_label")
        self.CME_time_2 = QtWidgets.QTimeEdit(parent=self.DBM_2D)
        self.CME_time_2.setGeometry(QtCore.QRect(150, 180, 100, 28))
        self.CME_time_2.setDateTime(QtCore.QDateTime(
            QtCore.QDate(2000, 1, 2), QtCore.QTime(0, 0, 0)))
        self.CME_time_2.setObjectName("CME_time_2")

        # dt0 input
        self.CME_dt0_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.CME_dt0_2.setEnabled(True)
        self.CME_dt0_2.setGeometry(QtCore.QRect(270, 180, 90, 28))
        self.CME_dt0_2.setToolTipDuration(-2)
        self.CME_dt0_2.setStatusTip("")
        self.CME_dt0_2.setMinimum(0.0)
        self.CME_dt0_2.setMaximum(1500.0)
        self.CME_dt0_2.setSingleStep(0.1)
        self.CME_dt0_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.CME_dt0_2.setProperty("value", 60.0)
        self.CME_dt0_2.setObjectName("CME_dt0_2")

        # R0 label
        self.R0_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.R0_2D_label.setGeometry(QtCore.QRect(10, 215, 161, 41))
        self.R0_2D_label.setObjectName("R0_2D_label")

        # R0 input
        self.R0_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.R0_2.setGeometry(QtCore.QRect(150, 220, 100, 28))
        self.R0_2.setMinimum(20.0)
        self.R0_2.setSingleStep(0.01)
        self.R0_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.R0_2.setObjectName("R0_2")

        # dR0 input
        self.dR0_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.dR0_2.setEnabled(True)
        self.dR0_2.setGeometry(QtCore.QRect(270, 220, 90, 28))
        self.dR0_2.setMinimum(0.1)
        self.dR0_2.setSingleStep(0.01)
        self.dR0_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dR0_2.setProperty("value", 1.0)
        self.dR0_2.setObjectName("dR0_2")

        # V0 label
        self.V0_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.V0_2D_label.setGeometry(QtCore.QRect(10, 270, 150, 41))
        self.V0_2D_label.setObjectName("V0_2D_label")

        # V0
        self.V0_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.V0_2.setGeometry(QtCore.QRect(150, 270, 100, 28))
        self.V0_2.setMaximum(200000.0)
        self.V0_2.setSingleStep(1.0)
        self.V0_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.V0_2.setProperty("value", 1000.0)
        self.V0_2.setObjectName("V0_2")

        # dV0
        self.dV0_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.dV0_2.setEnabled(True)
        self.dV0_2.setGeometry(QtCore.QRect(270, 270, 91, 28))
        self.dV0_2.setMaximum(200000.0)
        self.dV0_2.setSingleStep(1.0)
        self.dV0_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dV0_2.setProperty("value", 100.0)
        self.dV0_2.setObjectName("dV0_2")

        # Cone Selection
        self.Cone_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Cone_label.setGeometry(QtCore.QRect(10, 318, 141, 31))
        self.Cone_label.setObjectName("Cone_label")
        self.Cone_type = QtWidgets.QComboBox(parent=self.DBM_2D)
        self.Cone_type.setGeometry(QtCore.QRect(150, 318, 201, 28))
        self.Cone_type.setObjectName("Cone_type")
        self.Cone_type.addItem("")
        self.Cone_type.addItem("")
        self.Cone_type.addItem("")

        # Kinematic selection
        self.Kinemtic_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Kinemtic_label.setGeometry(QtCore.QRect(10, 362, 131, 20))
        self.Kinemtic_label.setObjectName("Kinemtic_label")
        self.Kinematic_Type = QtWidgets.QComboBox(parent=self.DBM_2D)
        self.Kinematic_Type.setGeometry(QtCore.QRect(150, 357, 201, 28))
        self.Kinematic_Type.setObjectName("Kinematic_Type")
        self.Kinematic_Type.addItem("")
        self.Kinematic_Type.addItem("")

        # Omega label
        self.Omega_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Omega_label.setGeometry(QtCore.QRect(10, 390, 141, 51))
        self.Omega_label.setObjectName("Omega_label")
        self.Omega = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.Omega.setGeometry(QtCore.QRect(170, 400, 80, 28))
        self.Omega.setMaximum(180.0)
        self.Omega.setSingleStep(1.0)
        self.Omega.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.Omega.setProperty("value", 30.0)
        self.Omega.setObjectName("Omega")
        self.dOmega = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.dOmega.setGeometry(QtCore.QRect(270, 400, 70, 28))
        self.dOmega.setMaximum(180.0)
        self.dOmega.setSingleStep(1.0)
        self.dOmega.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dOmega.setProperty("value", 5.0)
        self.dOmega.setObjectName("dOmega")

        # Phi label
        self.Phi_CME_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Phi_CME_label.setGeometry(QtCore.QRect(10, 438, 151, 51))
        self.Phi_CME_label.setObjectName("Phi_CME_label")
        self.Phi_CME = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.Phi_CME.setGeometry(QtCore.QRect(170, 448, 80, 28))
        self.Phi_CME.setMaximum(200000.0)
        self.Phi_CME.setSingleStep(1.0)
        self.Phi_CME.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.Phi_CME.setProperty("value", 60.0)
        self.Phi_CME.setObjectName("Phi_CME")
        self.dPhi_CME = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.dPhi_CME.setGeometry(QtCore.QRect(270, 448, 70, 28))
        self.dPhi_CME.setMaximum(200000.0)
        self.dPhi_CME.setSingleStep(1.0)
        self.dPhi_CME.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dPhi_CME.setProperty("value", 5.0)
        self.dPhi_CME.setObjectName("dPhi_CME")

        # Target Label
        self.Target_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Target_2D_label.setGeometry(QtCore.QRect(10, 488, 76, 28))
        self.Target_2D_label.setObjectName("Target_2D_label")
        self.Target_2 = QtWidgets.QComboBox(parent=self.DBM_2D)
        self.Target_2.setGeometry(QtCore.QRect(170, 488, 90, 28))
        self.Target_2.setObjectName("Target_2")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")
        self.Target_2.addItem("")

        # 2D DBM heading
        self.DBM_input_2D_heading = QtWidgets.QLabel(parent=self.DBM_2D)
        self.DBM_input_2D_heading.setGeometry(QtCore.QRect(10, 540, 351, 31))
        self.DBM_input_2D_heading.setObjectName("DBM_input_2D_heading")

        # Auto DBM label
        self.Auto_DBM_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Auto_DBM_2D_label.setGeometry(QtCore.QRect(10, 575, 111, 31))
        self.Auto_DBM_2D_label.setObjectName("Auto_DBM_2D_label")
        self.Auto_DBM_Yes_2 = QtWidgets.QRadioButton(parent=self.DBM_2D)
        self.Auto_DBM_Yes_2.setGeometry(QtCore.QRect(170, 580, 61, 26))
        self.Auto_DBM_Yes_2.setChecked(True)
        self.Auto_DBM_Yes_2.setObjectName("Auto_DBM_Yes_2")

        self.Auto_DBM_No_2 = QtWidgets.QRadioButton(parent=self.DBM_2D)
        self.Auto_DBM_No_2.setGeometry(QtCore.QRect(250, 580, 71, 26))
        self.Auto_DBM_No_2.setObjectName("Auto_DBM_No_2")
        self.Auto_DBM_2 = QtWidgets.QButtonGroup(MainWindow)
        self.Auto_DBM_2.setObjectName("Auto_DBM_2")
        self.Auto_DBM_2.addButton(self.Auto_DBM_No_2)
        self.Auto_DBM_2.addButton(self.Auto_DBM_Yes_2)

        # Solar wind type
        self.Solar_wind_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Solar_wind_2D_label.setGeometry(QtCore.QRect(10, 611, 141, 21))
        self.Solar_wind_2D_label.setObjectName("Solar_wind_2D_label")

        self.W_slow_2 = QtWidgets.QRadioButton(parent=self.DBM_2D)
        self.W_slow_2.setGeometry(QtCore.QRect(170, 611, 123, 26))
        self.W_slow_2.setChecked(True)
        self.W_slow_2.setObjectName("W_slow_2")
        self.W_fast_2 = QtWidgets.QRadioButton(parent=self.DBM_2D)
        self.W_fast_2.setGeometry(QtCore.QRect(250, 611, 123, 26))
        self.W_fast_2.setObjectName("W_fast_2")
        self.Wind_type_2 = QtWidgets.QButtonGroup(MainWindow)
        self.Wind_type_2.setObjectName("Wind_type_2")
        self.Wind_type_2.addButton(self.W_slow_2)
        self.Wind_type_2.addButton(self.W_fast_2)

        # manual solar wind input
        self.W_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.W_2D_label.setGeometry(QtCore.QRect(10, 647, 161, 41))
        self.W_2D_label.setObjectName("W_2D_label")
        self.w_in_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.w_in_2.setGeometry(QtCore.QRect(170, 652, 90, 28))
        self.w_in_2.setMaximum(200000.0)
        self.w_in_2.setSingleStep(1.0)
        self.w_in_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.w_in_2.setProperty("value", 400.0)
        self.w_in_2.setObjectName("w_in_2")
        self.dW_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.dW_2.setGeometry(QtCore.QRect(280, 652, 80, 28))
        self.dW_2.setMaximum(1000.0)
        self.dW_2.setSingleStep(1.0)
        self.dW_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dW_2.setProperty("value", 50.0)
        self.dW_2.setObjectName("dW_2")

        # gamma input
        self.Gamma_2D_label = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Gamma_2D_label.setGeometry(QtCore.QRect(10, 695, 141, 51))
        self.Gamma_2D_label.setObjectName("Gamma_2D_label")
        self.Gamma_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.Gamma_2.setGeometry(QtCore.QRect(170, 705, 90, 28))
        self.Gamma_2.setMaximum(10.0)
        self.Gamma_2.setSingleStep(0.01)
        self.Gamma_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.Gamma_2.setProperty("value", 0.2)
        self.Gamma_2.setObjectName("Gamma_2")
        self.dGamma_2 = QtWidgets.QDoubleSpinBox(parent=self.DBM_2D)
        self.dGamma_2.setGeometry(QtCore.QRect(280, 705, 80, 28))
        self.dGamma_2.setDecimals(3)
        self.dGamma_2.setMaximum(10.0)
        self.dGamma_2.setSingleStep(0.001)
        self.dGamma_2.setStepType(
            QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.dGamma_2.setProperty("value", 0.001)
        self.dGamma_2.setObjectName("dGamma_2")

        # Reset Button
        self.Reset_2 = QtWidgets.QPushButton(parent=self.DBM_2D)
        self.Reset_2.setGeometry(QtCore.QRect(60, 780, 100, 28))
        self.Reset_2.setObjectName("Reset_2")

        # Calculate Button
        self.Calculate_2 = QtWidgets.QPushButton(parent=self.DBM_2D)
        self.Calculate_2.setGeometry(QtCore.QRect(180, 780, 100, 28))
        self.Calculate_2.setDefault(True)
        self.Calculate_2.setFlat(False)
        self.Calculate_2.setObjectName("Calculate_2")

        # Divider for seperation
        self.line_6 = QtWidgets.QFrame(parent=self.DBM_2D)
        self.line_6.setGeometry(QtCore.QRect(0, 70, 361, 16))
        self.line_6.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_6.setObjectName("line_6")
        self.line_7 = QtWidgets.QFrame(parent=self.DBM_2D)
        self.line_7.setGeometry(QtCore.QRect(0, 519, 361, 16))
        self.line_7.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_7.setObjectName("line_7")
        self.line = QtWidgets.QFrame(parent=self.DBM_2D)
        self.line.setGeometry(QtCore.QRect(370, -10, 20, 841))
        self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.line_9 = QtWidgets.QFrame(parent=self.DBM_2D)
        self.line_9.setGeometry(QtCore.QRect(250, 400, 20, 81))
        self.line_9.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_9.setObjectName("line_9")
        self.line_10 = QtWidgets.QFrame(parent=self.DBM_2D)
        self.line_10.setGeometry(QtCore.QRect(250, 180, 20, 121))
        self.line_10.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_10.setObjectName("line_10")
        self.line_11 = QtWidgets.QFrame(parent=self.DBM_2D)
        self.line_11.setGeometry(QtCore.QRect(260, 650, 20, 81))
        self.line_11.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_11.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_11.setObjectName("line_11")

        # 2D DBM result label
        self.DBM_2D_result_header = QtWidgets.QLabel(parent=self.DBM_2D)
        self.DBM_2D_result_header.setGeometry(QtCore.QRect(400, 10, 151, 41))
        self.DBM_2D_result_header.setObjectName("DBM_2D_result_header")

        # 2D DBM result
        # Create a QScrollArea to make the result box scrollable
        self.DBM_Result_2D_scroll = QtWidgets.QScrollArea(parent=self.DBM_2D)
        self.DBM_Result_2D_scroll.setGeometry(
            QtCore.QRect(390, 60, 501, 121))  # Set the fixed size
        # Allow the scroll area to resize its content
        self.DBM_Result_2D_scroll.setWidgetResizable(True)
        self.DBM_Result_2D_scroll.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.DBM_Result_2D_scroll.setObjectName("DBM_Result_2D_scroll")
        self.DBM_Result_2D = QtWidgets.QLabel(parent=self.DBM_Result_2D_scroll)
        self.DBM_Result_2D.setGeometry(QtCore.QRect(390, 60, 501, 121))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.DBM_Result_2D.setFont(font)
        self.DBM_Result_2D.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.DBM_Result_2D.setWordWrap(True)  # Enable word wrapping
        self.DBM_Result_2D.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading |
                                        QtCore.Qt.AlignmentFlag.AlignLeft | QtCore.Qt.AlignmentFlag.AlignTop)
        self.DBM_Result_2D.setObjectName("DBM_Result_2D")
        # Set QLabel as the scrollable widget
        self.DBM_Result_2D_scroll.setWidget(self.DBM_Result_2D)

        # Heliosphere Plot
        self.Plot = QtWidgets.QLabel(parent=self.DBM_2D)
        self.Plot.setGeometry(QtCore.QRect(920, 60, 400, 351))
        self.Plot.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.Plot.setScaledContents(True)
        self.Plot.setObjectName("Plot")

        # RVT Plot
        self.RVT_plot_2 = QtWidgets.QLabel(parent=self.DBM_2D)
        self.RVT_plot_2.setGeometry(QtCore.QRect(820, 429, 500, 400))
        self.RVT_plot_2.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.RVT_plot_2.setScaledContents(True)
        self.RVT_plot_2.setObjectName("RVT_plot_2")

        # V plot
        self.V_plot_2 = QtWidgets.QLabel(parent=self.DBM_2D)
        self.V_plot_2.setGeometry(QtCore.QRect(390, 210, 371, 300))
        self.V_plot_2.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.V_plot_2.setScaledContents(True)
        self.V_plot_2.setObjectName("V_plot_2")

        # Transit time plot
        self.TT_Plot_2 = QtWidgets.QLabel(parent=self.DBM_2D)
        self.TT_Plot_2.setGeometry(QtCore.QRect(390, 520, 371, 300))
        self.TT_Plot_2.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.TT_Plot_2.setScaledContents(True)
        self.TT_Plot_2.setObjectName("TT_Plot_2")

        # Hiding Result part in the begining.
        # It will be visible only after values are submitted and results are obtained.
        # This will make GUI more clean
        self.DBM_Result_1D.hide()
        self.RVT_plot.hide()
        self.TT_Plot.hide()
        self.V_plot.hide()
        self.DBM_Result_2D_scroll.hide()
        self.DBM_Result_2D.hide()
        self.Plot.hide()
        self.V_plot_2.hide()
        self.TT_Plot_2.hide()
        self.RVT_plot_2.hide()

        # About Us Tab
        self.tabWidget.addTab(self.DBM_2D, "")
        self.About_us = QtWidgets.QWidget()
        self.About_us.setObjectName("About_us")
        self.tabWidget.addTab(self.About_us, "")
        MainWindow.setCentralWidget(self.centralwidget)
        
        # UNITOV logo
        self.UNITOV_logo = QtWidgets.QLabel(parent=self.About_us)
        self.UNITOV_logo.setGeometry(QtCore.QRect(380, 10, 150, 150))
        self.UNITOV_logo.setText("")
        self.UNITOV_logo.setPixmap(QtGui.QPixmap("About_Us_logo/UNITOV.jpg"))
        self.UNITOV_logo.setScaledContents(True)
        self.UNITOV_logo.setObjectName("UNITOV_logo")
        
        # USFD logo
        self.USFD_logo = QtWidgets.QLabel(parent=self.About_us)
        self.USFD_logo.setGeometry(QtCore.QRect(800, 10, 150, 150))
        self.USFD_logo.setText("")
        self.USFD_logo.setPixmap(QtGui.QPixmap("About_Us_logo/UOS.png"))
        self.USFD_logo.setScaledContents(True)
        self.USFD_logo.setObjectName("USFD_logo")
        
        # SWATNet logo
        self.SWATNET_logo = QtWidgets.QLabel(parent=self.About_us)
        self.SWATNET_logo.setGeometry(QtCore.QRect(540, 10, 250, 150))
        self.SWATNET_logo.setText("")
        self.SWATNET_logo.setPixmap(QtGui.QPixmap("About_Us_logo/SWATNet.png"))
        self.SWATNET_logo.setScaledContents(True)
        self.SWATNET_logo.setObjectName("SWATNET_logo")
        
        # EU logo
        self.EU_logo = QtWidgets.QLabel(parent=self.About_us)
        self.EU_logo.setGeometry(QtCore.QRect(10, 750, 240, 80))
        self.EU_logo.setText("")
        self.EU_logo.setPixmap(QtGui.QPixmap("About_Us_logo/EN_FundedbytheEU_RGB_POS.png"))
        self.EU_logo.setScaledContents(True)
        self.EU_logo.setObjectName("EU_logo")
        
        # MSCA logo
        self.MSCA_logo = QtWidgets.QLabel(parent=self.About_us)
        self.MSCA_logo.setGeometry(QtCore.QRect(1230, 750, 80, 80))
        self.MSCA_logo.setText("")
        self.MSCA_logo.setPixmap(QtGui.QPixmap("About_Us_logo/MSCA.png"))
        self.MSCA_logo.setScaledContents(True)
        self.MSCA_logo.setObjectName("MSCA_logo")
        
        # Acknowledgemet to EU
        self.Acknowledgement = QtWidgets.QLabel(parent=self.About_us)
        self.Acknowledgement.setGeometry(QtCore.QRect(260, 750, 961, 71))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.Acknowledgement.setFont(font)
        self.Acknowledgement.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.Acknowledgement.setWordWrap(True)
        self.Acknowledgement.setObjectName("Acknowledgement")
        
        # welcome text
        self.Welcome_txt = QtWidgets.QLabel(parent=self.About_us)
        self.Welcome_txt.setGeometry(QtCore.QRect(10, 180, 1301, 491))
        self.Welcome_txt.setScaledContents(True)
        self.Welcome_txt.setWordWrap(True)
        self.Welcome_txt.setObjectName("Welcome_txt")
        
        

        self.retranslateUi(MainWindow)

        # Selecting default values for few selections
        self.tabWidget.setCurrentIndex(2)
        self.Target.setCurrentIndex(2)
        self.Target_2.setCurrentIndex(2)
        self.Cone_type.setCurrentIndex(1)

        self.actions_1D = Actions1D(self)  # Initialize actions
        self.actions_2D = Actions2D(self)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.PDBM_1D_Selection.setText(
            _translate("MainWindow", "P-DBM Calculation:"))
        self.PDBM_Yes.setText(_translate("MainWindow", "Yes "))
        self.PDBM_No.setText(_translate("MainWindow", "No"))
        self.CME_input_1D_heading.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-style:italic; text-decoration: underline;\">CME Input Parameters</span></p></body></html>"))
        self.CME_date.setDisplayFormat(_translate("MainWindow", "dd-MM-yyyy"))
        self.Date_1D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>CME Date at R<span style=\" vertical-align:sub;\">0 </span>:</p></body></html>"))
        self.t0_1D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>CME Time at R<span style=\" vertical-align:sub;\">0 </span>:</p></body></html>"))
        self.CME_time.setDisplayFormat(_translate("MainWindow", "h:mm AP"))
        self.Target.setItemText(0, _translate("MainWindow", "Mercury"))
        self.Target.setItemText(1, _translate("MainWindow", "Venus"))
        self.Target.setItemText(2, _translate("MainWindow", "Earth"))
        self.Target.setItemText(3, _translate("MainWindow", "Mars"))
        self.Target.setItemText(4, _translate("MainWindow", "Jupiter"))
        self.Target.setItemText(5, _translate("MainWindow", "Saturn"))
        self.Target.setItemText(6, _translate("MainWindow", "Messenger"))
        self.Target.setItemText(7, _translate("MainWindow", "VEX"))
        self.Target.setItemText(8, _translate("MainWindow", "PSP"))
        self.Target.setItemText(9, _translate("MainWindow", "SolO"))
        self.Target.setItemText(10, _translate("MainWindow", "BepiCol"))
        self.Target.setItemText(11, _translate("MainWindow", "Spitzer"))
        self.Target.setItemText(12, _translate("MainWindow", "Wind"))
        self.Target.setItemText(13, _translate("MainWindow", "ST-A"))
        self.Target.setItemText(14, _translate("MainWindow", "ST-B"))
        self.Target.setItemText(15, _translate("MainWindow", "Kepler"))
        self.Target.setItemText(16, _translate("MainWindow", "MSL"))
        self.Target.setItemText(17, _translate("MainWindow", "Maven"))
        self.Target.setItemText(18, _translate("MainWindow", "Juno"))
        self.Target_label.setText(_translate("MainWindow", "Target :"))
        self.V0_1D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>Speed of CME<br/>at R<span style=\" vertical-align:sub;\">0</span> - <span style=\" font-weight:700;\">V</span><span style=\" font-weight:700; vertical-align:sub;\">0 </span>(km/s) :</p></body></html>"))
        self.CME_dt0.setToolTip(_translate(
            "MainWindow", "<html><head/><body><p>Uncertainity in Time.</p></body></html>"))
        self.DBM_1D_input_label.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-style:italic; text-decoration: underline;\">DBM Input Parameters</span></p></body></html>"))
        self.Auto_DBM_1D_label.setText(
            _translate("MainWindow", "Auto Choice:"))
        self.Auto_DBM_Yes.setText(_translate("MainWindow", "Yes"))
        self.Auto_DBM_No.setText(_translate("MainWindow", "No"))
        self.Solar_wind_type_label.setText(
            _translate("MainWindow", "Solar Wind Type:"))
        self.W_slow.setText(_translate("MainWindow", "Slow"))
        self.W_fast.setText(_translate("MainWindow", "Fast"))
        self.W_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>Ambient Solar wind<br/>speed <span style=\" font-weight:700;\">w </span>(km/s) :</p></body></html>"))
        self.gamma_label.setText(_translate("MainWindow", "<html><head/><body><p>Drag Parameter <br/><span style=\" font-family:\'Times New Roman\',\'serif\'; font-weight:700; color:#202122; background-color:transparent\">&#915; </span>( x 10<span style=\" vertical-align:super;\">-7</span> km<span style=\" vertical-align:super;\">-1</span>) :</p></body></html>"))
        self.Calculate.setText(_translate("MainWindow", "Calculate"))
        self.Reset.setText(_translate("MainWindow", "Reset"))
        self.R0_1D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>CME Initial<br/> Position <span style=\" font-weight:700;\">R</span><span style=\" font-weight:700; vertical-align:sub;\">0</span> (R<span style=\" vertical-align:sub;\">⊙</span>) :</p></body></html>"))
        self.Result_1D_heading.setText(_translate(
            "MainWindow", "<html><head/><body><p><span style=\" font-size:18pt; text-decoration: underline; color:#1c71d8;\">DBM Results:</span></p></body></html>"))
        self.DBM_Result_1D.setText(_translate(
            "MainWindow", "<html><head/><body><p>ASD<br/>ASD<br/>ASD<br/>ASD</p></body></html>"))
        self.RVT_plot.setText(_translate("MainWindow", "RVT Plot"))
        self.TT_Plot.setText(_translate("MainWindow", "TT Plot"))
        self.V_plot.setText(_translate("MainWindow", "V1 Plot"))
        self.Plot_1D_heading.setText(_translate(
            "MainWindow", "<html><head/><body><p><span style=\" font-size:18pt; text-decoration: underline; color:#1c71d8;\">Plots:</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.DBM_1D), _translate("MainWindow", "1D - DBM"))
        self.Reset_2.setText(_translate("MainWindow", "Reset"))
        self.CME_dt0_2.setToolTip(_translate(
            "MainWindow", "<html><head/><body><p>Uncertainity in Time.</p></body></html>"))
        self.Target_2.setItemText(0, _translate("MainWindow", "Mercury"))
        self.Target_2.setItemText(1, _translate("MainWindow", "Venus"))
        self.Target_2.setItemText(2, _translate("MainWindow", "Earth"))
        self.Target_2.setItemText(3, _translate("MainWindow", "Mars"))
        self.Target_2.setItemText(4, _translate("MainWindow", "Jupiter"))
        self.Target_2.setItemText(5, _translate("MainWindow", "Saturn"))
        self.Target_2.setItemText(6, _translate("MainWindow", "Messenger"))
        self.Target_2.setItemText(7, _translate("MainWindow", "VEX"))
        self.Target_2.setItemText(8, _translate("MainWindow", "PSP"))
        self.Target_2.setItemText(9, _translate("MainWindow", "SolO"))
        self.Target_2.setItemText(10, _translate("MainWindow", "BepiCol"))
        self.Target_2.setItemText(11, _translate("MainWindow", "Spitzer"))
        self.Target_2.setItemText(12, _translate("MainWindow", "Wind"))
        self.Target_2.setItemText(13, _translate("MainWindow", "ST-A"))
        self.Target_2.setItemText(14, _translate("MainWindow", "ST-B"))
        self.Target_2.setItemText(15, _translate("MainWindow", "Kepler"))
        self.Target_2.setItemText(16, _translate("MainWindow", "MSL"))
        self.Target_2.setItemText(17, _translate("MainWindow", "Maven"))
        self.Target_2.setItemText(18, _translate("MainWindow", "Juno"))
        self.V0_2D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>Speed of CME<br/>at R<span style=\" vertical-align:sub;\">0</span> - <span style=\" font-weight:700;\">V</span><span style=\" font-weight:700; vertical-align:sub;\">0 </span>(km/s) :</p></body></html>"))
        self.CME_time_2.setDisplayFormat(_translate("MainWindow", "h:mm AP"))
        self.CME_date_2.setDisplayFormat(
            _translate("MainWindow", "dd-MM-yyyy"))
        self.PDBM_No_2.setText(_translate("MainWindow", "No"))
        self.t0_2D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>CME Time at R<span style=\" vertical-align:sub;\">0 </span>:</p></body></html>"))
        self.Target_2D_label.setText(_translate("MainWindow", "Target :"))
        self.Calculate_2.setText(_translate("MainWindow", "Calculate"))
        self.Auto_DBM_No_2.setText(_translate("MainWindow", "No"))
        self.DBM_input_2D_heading.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-style:italic; text-decoration: underline;\">DBM Input Parameters</span></p></body></html>"))
        self.PDBM_2D_label.setText(_translate(
            "MainWindow", "P-DBM Calculation:"))
        self.Auto_DBM_2D_label.setText(
            _translate("MainWindow", "Auto Choice:"))
        self.Solar_wind_2D_label.setText(
            _translate("MainWindow", "Solar Wind Type:"))
        self.CME_input_2D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-style:italic; text-decoration: underline;\">CME Input Parameters</span></p></body></html>"))
        self.PDBM_Yes_2.setText(_translate("MainWindow", "Yes "))
        self.Date_2D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>CME Date at R<span style=\" vertical-align:sub;\">0 </span>:</p></body></html>"))
        self.Auto_DBM_Yes_2.setText(_translate("MainWindow", "Yes"))
        self.W_slow_2.setText(_translate("MainWindow", "Slow"))
        self.W_2D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>Ambient Solar wind<br/>speed <span style=\" font-weight:700;\">w </span>(km/s) :</p></body></html>"))
        self.W_fast_2.setText(_translate("MainWindow", "Fast"))
        self.Gamma_2D_label.setText(_translate("MainWindow", "<html><head/><body><p>Drag Parameter <br/><span style=\" font-family:\'Times New Roman\',\'serif\'; font-weight:700; color:#202122; background-color:transparent\">&#915; </span>( x 10<span style=\" vertical-align:super;\">-7</span> km<span style=\" vertical-align:super;\">-1</span>) :</p></body></html>"))
        self.R0_2D_label.setText(_translate(
            "MainWindow", "<html><head/><body><p>CME Initial<br/> Position <span style=\" font-weight:700;\">R</span><span style=\" font-weight:700; vertical-align:sub;\">0</span> (R<span style=\" vertical-align:sub;\">⊙</span>) :</p></body></html>"))
        self.Omega_label.setText(_translate("MainWindow", "<html><head/><body><p>CME\'s Angular<br/>Width <span style=\" font-family:\'sans-serif\'; font-weight:700; color:#202122; background-color:transparent;\">ω </span><span style=\" font-family:\'sans-serif\'; color:#202122; background-color:transparent;\">(deg) :</span></p></body></html>"))
        self.Phi_CME_label.setText(_translate("MainWindow", "<html><head/><body><p>CME Propagation<br/>Direction <span style=\" font-family:\'sans-serif\'; font-weight:700; color:#202122; background-color:transparent;\">φ</span><span style=\" font-family:\'sans-serif\'; color:#202122; background-color:transparent;\">(deg) :</span></p></body></html>"))
        self.Cone_label.setText(_translate("MainWindow", "CME Cone Type :"))
        self.Cone_type.setItemText(
            0, _translate("MainWindow", "Concentric Cone"))
        self.Cone_type.setItemText(
            1, _translate("MainWindow", "Ice-Cream Cone"))
        self.Cone_type.setItemText(
            2, _translate("MainWindow", "Tangential Cone"))
        self.Kinemtic_label.setText(
            _translate("MainWindow", "Kinematic Type :"))
        self.Kinematic_Type.setItemText(0, _translate(
            "MainWindow", "Self-Similar Expansion"))
        self.Kinematic_Type.setItemText(1, _translate(
            "MainWindow", "Flattening Cone Evolution"))
        self.Plot.setText(_translate("MainWindow", "CME"))
        self.DBM_Result_2D.setText(_translate(
            "MainWindow", "<html><head/><body><p>ASD<br/>ASD<br/>ASD<br/>ASD</p></body></html>"))
        self.DBM_2D_result_header.setText(_translate(
            "MainWindow", "<html><head/><body><p><span style=\" font-size:18pt; text-decoration: underline; color:#1c71d8;\">DBM Results:</span></p></body></html>"))
        self.RVT_plot_2.setText(_translate("MainWindow", "RVT Plot"))
        self.V_plot_2.setText(_translate("MainWindow", "V1 Plot"))
        self.TT_Plot_2.setText(_translate("MainWindow", "TT Plot"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.DBM_2D), _translate("MainWindow", "2D DBM"))
        self.Acknowledgement.setText(_translate("MainWindow", "SWATNet has received funding from the European Union’s Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie Grant Agreement No 955620"))
        self.Welcome_txt.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; font-weight:700; font-style:italic;\">Welcome to CME Arrival Time Calculator !!</span></p><p><br/></p><p><span style=\" font-size:14pt;\">This tool is part of </span><a href=\"https://swatnet.eu/project9/\"><span style=\" text-decoration: underline; color:#0000ff;\">Project-9</span></a><span style=\" font-size:14pt;\"> under </span><a href=\"https://swatnet.eu/\"><span style=\" text-decoration: underline; color:#0000ff;\">SWATNet</span></a><span style=\" font-size:14pt;\"> framework. This Graphical User Interface (GUI) is designed to provide easy way to calculate Coronal Mass Ejection (CME) arrival time using Probabilistic Drag Based Model (P-DBM). The mathematical framework for the calculation in this GUI is part of PhD thesis of Ronish Mugatwala. </span></p><p><br/></p><p><span style=\" font-size:14pt;\">One of the SWATNet\'s mission is to make cutting edge space weather prediction tools more user friendly for the students, researchers and enthusiasts.</span></p><p><br/></p><p><span style=\" font-size:14pt;\">Thank you for exploring this GUI. We hope it serves as a valuable resouce in your work and study!<br/></span></p><p><span style=\" font-size:14pt; font-weight:700; text-decoration: underline;\">Note:</span><span style=\" font-size:14pt;\"> This tools is still under development and lack some of the features. List of known bugs is avilable on Github page of tool. If you have some suggestions or if you find any unlisted bug in a tool write to us via </span><a href=\"https://github.com/astronish16\"><span style=\" text-decoration: underline; color:#0000ff;\">Github</span></a><span style=\" font-size:14pt;\"> pull request or directly to </span><a href=\"ronish.mugatwala@gmail.com\"><span style=\" text-decoration: underline; color:#0000ff;\">Ronish Mugatwala</span></a><span style=\" font-size:14pt;\">.</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.About_us), _translate("MainWindow", "About US"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
